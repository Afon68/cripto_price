from django.apps import AppConfig
import os

# print("–≠—Ç–æ—Ç –ø—Ä–∏–Ω—Ç —Å—Ç–æ–∏—Ç —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞ –≤ apps.py")
class CryptoCoinsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'crypto_coins'

    
    def ready(self):
        if os.environ.get("RUN_MAIN") != "true":  # ‚úÖ –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –≥–ª–∞–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å - –≤—ã—Ö–æ–¥–∏–º
            print("üöÄ –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ Django (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º)")
            return
        print("–ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Django")
        try:
            from .scheduler import start
            start()  # ‚úÖ –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ Django
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")


# from django.apps import AppConfig
# import threading


# class CryptoCoinsConfig(AppConfig):
#     default_auto_field = "django.db.models.BigAutoField"
#     name = "crypto_coins"

#     def ready(self):
#         if threading.active_count() > 1:
#             return  # üöÄ –ò–∑–±–µ–≥–∞–µ–º –¥–≤–æ–π–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤ Django
#         print("‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Django")
#         try:
#             from .scheduler import start
#             start()  # ‚úÖ –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ Django
#         except Exception as e:
#             print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")