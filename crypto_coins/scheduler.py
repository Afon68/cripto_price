import logging
import threading
import time
import psutil
import atexit
from apscheduler.schedulers.background import BackgroundScheduler
from .services import price_token_from_rialto
from .services import start_selenium  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ Selenium

def check_memory():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–π –ø–∞–º—è—Ç–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Selenium –ø—Ä–∏ –Ω–µ—Ö–≤–∞—Ç–∫–µ –û–ó–£"""
    while True:
        mem = psutil.virtual_memory()
        if mem.available < 100 * 1024 * 1024:  # –ï—Å–ª–∏ < 100MB —Å–≤–æ–±–æ–¥–Ω–æ
            logging.warning(f"‚ö† –û–ó–£ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è!–û—Å—Ç–∞–ª–æ—Å—å {mem.available} –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Selenium...")
            start_selenium()  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Selenium
        time.sleep(10)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥

def start():
    """–ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Django"""
    print("‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º Selenium –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Django...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º `price_token_from_rialto` –≤ —Ñ–æ–Ω–µ
    threading.Thread(target=price_token_from_rialto, daemon=True).start()
    
    # üî• –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–∞–º—è—Ç–∏
    threading.Thread(target=check_memory, daemon=True).start()
    
    # –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –¥—Ä—É–≥–∏–µ —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler = BackgroundScheduler()
    scheduler.start()
    atexit.register(lambda: scheduler.shutdown(wait=False))



   

